#include <iostream>
#include <cmath>
using namespace std;

//recursive 8 cross
bool ok(int q[8],int c)
{
    int table[][5]={{-1},{0,-1},{0,1,-1},{0,2,-1},{1,2,-1},{1,2,3,4,-1},{2,3,5,-1},{4,5,6,-1}};
    for(int i=0;i<c;++i)
    {
        if(q[i]==q[c])
            return false;
    }
    for(int i=0;table[c][i]!=-1;++i)
    {
        if(1==abs(q[c]-q[table[c][i]]))
            return false;
    }
    return true;
}

void print(int q[])
{
    static int count=0;
    cout<<"Solution #"<<++count<<endl;
    cout<<"  "<<q[1]<<" "<<q[4]<<endl;
    cout<<q[0]<<" "<<q[2]<<" "<<q[5]<<" "<<q[7]<<endl;
    cout<<"  "<<q[3]<<" "<<q[6]<<endl;
}

void move(int* q, int i)
{
    if(i==8)
    {
        print(q);
        return;
    }

    for(int j=0;j<8;j++)
    {
        q[i]=j;
        if(ok(q,i))
            move(q,i+1);
    }
}

int main()
{
    int q[8];
    move(q,0);
    return 0;
}
